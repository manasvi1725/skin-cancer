# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WVHoTWTDbQ0MbqWHSkniK9_IhiwZAdi9
"""

from google.colab import files

uploaded = files.upload()  # Select the downloaded model.h5 file

from tensorflow.keras.models import load_model

model = load_model('model.h5')  # The uploaded file will be in the current directory

!pip install flask-ngrok pyngrok

from flask import Flask, request, jsonify
import tensorflow as tf
import numpy as np
import cv2
from flask_ngrok import run_with_ngrok

app = Flask(__name__)
run_with_ngrok(app)  # Start ngrok when the app is run

@app.route('/predict', methods=['POST'])
def predict():
    # Get image from the request
    file = request.files['file']
    img = cv2.imdecode(np.frombuffer(file.read(), np.uint8), cv2.IMREAD_COLOR)
    img_resized = cv2.resize(img, (224, 224))  # Resize to model input size
    img_array = np.expand_dims(img_resized, axis=0)  # Add batch dimension

    # Make prediction
    predictions = model.predict(img_array)
    predicted_class = np.argmax(predictions)

    return jsonify({'class': int(predicted_class)})

if __name__ == '__main__':
    app.run() # Start the Flask app with ngrok enabled